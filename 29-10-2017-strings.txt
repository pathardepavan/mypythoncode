>>> count = 1
>>> while count <= 10:
...     print(count)
...     count = count + 1
... 
1
2
3
4
5
6
7
8
9
10
>>> count = 1
>>> while count<= 10:
...     if count%2==0:
...             print("count is even")
...     ele:
  File "<stdin>", line 4
    ele:
       ^
SyntaxError: invalid syntax
>>> count = 1
>>> while count<=10:
...     if count%2==0:
...             print("count is even")
...     else:
...             print("count is odd")
...     count = count + 1
... 
count is odd
count is even
count is odd
count is even
count is odd
count is even
count is odd
count is even
count is odd
count is even
>>> count = 1
>>> while count<=10:
...     print(count)
...     count = count + 1
... 
1
2
3
4
5
6
7
8
9
10
>>> count = 1
>>> while count<=10:
...     if count ==5:
...             pass
...     else:
...             print(count)
...     count = count+1
... 
1
2
3
4
6
7
8
9
10
>>> count=1
>>> while count<=10:
...     if count==5:
...             break
...     else:
...             print(count)
...     count = count + 1
... 
1
2
3
4
>>> x = [1, 2, 3, 4, 5, 6, 7, 8, 9]
>>> for num in x:
...     print(num**3)
... 
1
8
27
64
125
216
343
512
729
>>> for num in range(1, 11):
...     print(num**2)
... 
1
4
9
16
25
36
49
64
81
100
>>> *
  File "<stdin>", line 1
    *
    ^
SyntaxError: invalid syntax
>>> for num in range(1,11):
...     if num%3==0:
...             print("foo")
...     elif num%5==0:
...             print("bar")
...     else:
...             print(num)
... 
1
2
foo
4
bar
foo
7
8
foo
bar
>>> x = 10
>>> type(x)
<class 'int'>
>>> x = 10.5
>>> type(x)
<class 'float'>
>>> int(10.5)
10
>>> int('hi')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: invalid literal for int() with base 10: 'hi'
>>> int('10')
10
>>> float('10.5')
10.5
>>> float('hi')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: could not convert string to float: 'hi'
>>> import math
>>> dir(math)
['__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atan2', 'atanh', 'ceil', 'copysign', 'cos', 'cosh', 'degrees', 'e', 'erf', 'erfc', 'exp', 'expm1', 'fabs', 'factorial', 'floor', 'fmod', 'frexp', 'fsum', 'gamma', 'gcd', 'hypot', 'inf', 'isclose', 'isfinite', 'isinf', 'isnan', 'ldexp', 'lgamma', 'log', 'log10', 'log1p', 'log2', 'modf', 'nan', 'pi', 'pow', 'radians', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'tau', 'trunc']
>>> help(math.factorial)

>>> math.factorial(5)
120
>>> math.log10(10)
1.0
>>> math.floor(3.6)
3
>>> math.ceil(3.6)
4
>>> import random
>>> dir(random)
['BPF', 'LOG4', 'NV_MAGICCONST', 'RECIP_BPF', 'Random', 'SG_MAGICCONST', 'SystemRandom', 'TWOPI', '_BuiltinMethodType', '_MethodType', '_Sequence', '_Set', '__all__', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', '_acos', '_bisect', '_ceil', '_cos', '_e', '_exp', '_inst', '_itertools', '_log', '_pi', '_random', '_sha512', '_sin', '_sqrt', '_test', '_test_generator', '_urandom', '_warn', 'betavariate', 'choice', 'choices', 'expovariate', 'gammavariate', 'gauss', 'getrandbits', 'getstate', 'lognormvariate', 'normalvariate', 'paretovariate', 'randint', 'random', 'randrange', 'sample', 'seed', 'setstate', 'shuffle', 'triangular', 'uniform', 'vonmisesvariate', 'weibullvariate']
>>> random.choice(range(1,100))
88
>>> random.choice(range(1,100))
44
>>> random.choice(range(1,100))
33
>>> random.choice(range(1,100))
79
>>> for x in random.shuffle(range(1,10)):
...     print(x)
... 
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/random.py", line 274, in shuffle
    x[i], x[j] = x[j], x[i]
TypeError: 'range' object does not support item assignment
>>> x = [1,2,3,4,5]
>>> x =random.shuffle(x)
>>> x
>>> x = [1,2,3,4,5]
>>> random.shuffle(x)
>>> x
[1, 5, 2, 3, 4]
>>> fname = 'monty'
>>> type(fname)
<class 'str'>
>>> str(10)
'10'
>>> str(10.5)
'10.5'
>>> str('hi')
'hi'
>>> str('')
''
>>> len(fname)
5
>>> fname
'monty'
>>> fname[0]
'm'
>>> fname[5]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
IndexError: string index out of range
>>> fname[-1]
'y'
>>> fname[-5]
'm'
>>> fname[-3]
'n'
>>> fname[2:4]
'nt'
>>> fname[2:3]
'n'
>>> fname[2:]
'nty'
>>> fname[:3]
'mon'
>>> fname
'monty'
>>> fname[-1::-1]
'ytnom'
>>> fname[-5:-2]
'mon'
>>> fname[-1::-1]
'ytnom'
>>> fname[-1::-2]
'ynm'
>>> fname[::-1]
'ytnom'
>>> fname
'monty'
>>> fname[::-1]
'ytnom'
>>> for c in fname:
...     print(c)
... 
m
o
n
t
y
>>> index=0
>>> while index<len(fname):
...     print(fname[index])
...     index = index+1
... 
m
o
n
t
y
>>> fname
'monty'
>>> fname[0]='k'
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'str' object does not support item assignment
>>> del fname[0]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'str' object doesn't support item deletion
>>> del fname
>>> fname
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'fname' is not defined
>>> dir(str)
['__add__', '__class__', '__contains__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getnewargs__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__mod__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__rmod__', '__rmul__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'capitalize', 'casefold', 'center', 'count', 'encode', 'endswith', 'expandtabs', 'find', 'format', 'format_map', 'index', 'isalnum', 'isalpha', 'isdecimal', 'isdigit', 'isidentifier', 'islower', 'isnumeric', 'isprintable', 'isspace', 'istitle', 'isupper', 'join', 'ljust', 'lower', 'lstrip', 'maketrans', 'partition', 'replace', 'rfind', 'rindex', 'rjust', 'rpartition', 'rsplit', 'rstrip', 'split', 'splitlines', 'startswith', 'strip', 'swapcase', 'title', 'translate', 'upper', 'zfill']
>>> x = 'pavan\n'
>>> print(x)
pavan

>>> y=r'pavan\n'
>>> print(y)
pavan\n
>>> type(y)
<class 'str'>
>>> type(x)
<class 'str'>
>>> z='pavan\b'
>>> print(z)
pavan
>>> z = u'किसी भी तरह'
>>> type(z)
<class 'str'>
>>> print(z)
किसी भी तरह
>>> dir(str)
['__add__', '__class__', '__contains__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getnewargs__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__mod__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__rmod__', '__rmul__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'capitalize', 'casefold', 'center', 'count', 'encode', 'endswith', 'expandtabs', 'find', 'format', 'format_map', 'index', 'isalnum', 'isalpha', 'isdecimal', 'isdigit', 'isidentifier', 'islower', 'isnumeric', 'isprintable', 'isspace', 'istitle', 'isupper', 'join', 'ljust', 'lower', 'lstrip', 'maketrans', 'partition', 'replace', 'rfind', 'rindex', 'rjust', 'rpartition', 'rsplit', 'rstrip', 'split', 'splitlines', 'startswith', 'strip', 'swapcase', 'title', 'translate', 'upper', 'zfill']
>>> fname
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'fname' is not defined
>>> fname='monty'
>>> fname.upper()
'MONTY'
>>> fname
'monty'
>>> fname.upper().lower()
'monty'
>>> fname.upper().lower().swapcase()
'MONTY'
>>> fname.index('m')
0
>>> fname.rindex('m')
0
>>> 'pythonpython'.index('p')
0
>>> 'pythonpython'.rindex('p')
6
>>> 'pythonpython'.count('p')
2
>>> 'pythonpython'.count('k')
0
>>> 'pythonpython'.count('py')
2
>>> dir(str)
['__add__', '__class__', '__contains__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getnewargs__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__mod__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__rmod__', '__rmul__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'capitalize', 'casefold', 'center', 'count', 'encode', 'endswith', 'expandtabs', 'find', 'format', 'format_map', 'index', 'isalnum', 'isalpha', 'isdecimal', 'isdigit', 'isidentifier', 'islower', 'isnumeric', 'isprintable', 'isspace', 'istitle', 'isupper', 'join', 'ljust', 'lower', 'lstrip', 'maketrans', 'partition', 'replace', 'rfind', 'rindex', 'rjust', 'rpartition', 'rsplit', 'rstrip', 'split', 'splitlines', 'startswith', 'strip', 'swapcase', 'title', 'translate', 'upper', 'zfill']
>>> 'monty python'.split()
['monty', 'python']
>>> 'monty@python.org'.split('@')
['monty', 'python.org']
>>> 'monty@python.org'.split('py')
['monty@', 'thon.org']
>>> '   pp '.strip()
'pp'
>>> "abc python class".strip()
'abc python class'
>>> 'monty'.isupper()
False
>>> 'monty'.islower()
True
>>> ','.join('monty')
'm,o,n,t,y'
>>> 'monty'.zfill(10)
'00000monty'
>>> in='aeiou'
  File "<stdin>", line 1
    in='aeiou'
     ^
SyntaxError: invalid syntax
>>> input='aeiou'
>>> ouput='12345'
>>> ttable=maketrans(input,ouput)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'maketrans' is not defined
>>> from string import maketrans
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ImportError: cannot import name 'maketrans'
>>> import string
>>> dir(string)
['Formatter', 'Template', '_ChainMap', '_TemplateMetaclass', '__all__', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', '_re', '_string', 'ascii_letters', 'ascii_lowercase', 'ascii_uppercase', 'capwords', 'digits', 'hexdigits', 'octdigits', 'printable', 'punctuation', 'whitespace']
>>> dir(str)
['__add__', '__class__', '__contains__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getnewargs__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__mod__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__rmod__', '__rmul__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'capitalize', 'casefold', 'center', 'count', 'encode', 'endswith', 'expandtabs', 'find', 'format', 'format_map', 'index', 'isalnum', 'isalpha', 'isdecimal', 'isdigit', 'isidentifier', 'islower', 'isnumeric', 'isprintable', 'isspace', 'istitle', 'isupper', 'join', 'ljust', 'lower', 'lstrip', 'maketrans', 'partition', 'replace', 'rfind', 'rindex', 'rjust', 'rpartition', 'rsplit', 'rstrip', 'split', 'splitlines', 'startswith', 'strip', 'swapcase', 'title', 'translate', 'upper', 'zfill']
>>> dir(builtins)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'builtins' is not defined
>>> import builtins
>>> dir(builtins)
['ArithmeticError', 'AssertionError', 'AttributeError', 'BaseException', 'BlockingIOError', 'BrokenPipeError', 'BufferError', 'BytesWarning', 'ChildProcessError', 'ConnectionAbortedError', 'ConnectionError', 'ConnectionRefusedError', 'ConnectionResetError', 'DeprecationWarning', 'EOFError', 'Ellipsis', 'EnvironmentError', 'Exception', 'False', 'FileExistsError', 'FileNotFoundError', 'FloatingPointError', 'FutureWarning', 'GeneratorExit', 'IOError', 'ImportError', 'ImportWarning', 'IndentationError', 'IndexError', 'InterruptedError', 'IsADirectoryError', 'KeyError', 'KeyboardInterrupt', 'LookupError', 'MemoryError', 'ModuleNotFoundError', 'NameError', 'None', 'NotADirectoryError', 'NotImplemented', 'NotImplementedError', 'OSError', 'OverflowError', 'PendingDeprecationWarning', 'PermissionError', 'ProcessLookupError', 'RecursionError', 'ReferenceError', 'ResourceWarning', 'RuntimeError', 'RuntimeWarning', 'StopAsyncIteration', 'StopIteration', 'SyntaxError', 'SyntaxWarning', 'SystemError', 'SystemExit', 'TabError', 'TimeoutError', 'True', 'TypeError', 'UnboundLocalError', 'UnicodeDecodeError', 'UnicodeEncodeError', 'UnicodeError', 'UnicodeTranslateError', 'UnicodeWarning', 'UserWarning', 'ValueError', 'Warning', 'ZeroDivisionError', '_', '__build_class__', '__debug__', '__doc__', '__import__', '__loader__', '__name__', '__package__', '__spec__', 'abs', 'all', 'any', 'ascii', 'bin', 'bool', 'bytearray', 'bytes', 'callable', 'chr', 'classmethod', 'compile', 'complex', 'copyright', 'credits', 'delattr', 'dict', 'dir', 'divmod', 'enumerate', 'eval', 'exec', 'exit', 'filter', 'float', 'format', 'frozenset', 'getattr', 'globals', 'hasattr', 'hash', 'help', 'hex', 'id', 'input', 'int', 'isinstance', 'issubclass', 'iter', 'len', 'license', 'list', 'locals', 'map', 'max', 'memoryview', 'min', 'next', 'object', 'oct', 'open', 'ord', 'pow', 'print', 'property', 'quit', 'range', 'repr', 'reversed', 'round', 'set', 'setattr', 'slice', 'sorted', 'staticmethod', 'str', 'sum', 'super', 'tuple', 'type', 'vars', 'zip']
>>> import string
>>> string.maketrans()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: module 'string' has no attribute 'maketrans'
>>> str.maketrans()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: maketrans() takes at least 1 argument (0 given)
>>> ttable = str.maketrans(input,output)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'output' is not defined
>>> ttable = str.maketrans(input,ouput)
>>> ttable
{97: 49, 101: 50, 105: 51, 111: 52, 117: 53}
>>> 'monty'.translate(ttable)
'm4nty'
>>> 
